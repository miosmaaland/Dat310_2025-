{"ast":null,"code":"export default {\n  name: \"QuizPlay\",\n  data() {\n    return {\n      question: null,\n      score: 0,\n      message: '',\n      correctAnswer: null,\n      loading: false\n    };\n  },\n  methods: {\n    fetchQuestion() {\n      this.loading = true;\n      fetch('/api/question').then(res => res.json()).then(data => {\n        if (!data.error) {\n          this.question = data;\n          this.message = '';\n          this.correctAnswer = null;\n        } else {\n          this.message = data.error;\n        }\n        this.loading = false;\n      }).catch(() => {\n        this.message = 'Failed to load question.';\n        this.loading = false;\n      });\n    },\n    submitAnswer(answer) {\n      if (this.loading) return;\n      this.loading = true;\n      fetch('/api/answer', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          question_id: this.question.id,\n          answer\n        })\n      }).then(res => res.json()).then(data => {\n        this.correctAnswer = data.correct;\n        if (data.correct) {\n          this.message = 'Correct!';\n          this.score += 1; // Just an example, adjust if needed\n        } else {\n          this.message = `Wrong! The correct answer was ${data.correct_answer}`;\n        }\n        this.fetchQuestion();\n      }).finally(() => {\n        this.loading = false;\n      });\n    },\n    skipQuestion() {\n      if (this.loading) return;\n      this.loading = true;\n      fetch('/api/skip', {\n        method: 'POST'\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          this.score -= 5;\n          this.message = 'Question skipped.';\n          this.fetchQuestion();\n        } else {\n          this.message = data.error || 'Could not skip the question.';\n        }\n      }).finally(() => {\n        this.loading = false;\n      });\n    }\n  },\n  mounted() {\n    this.fetchQuestion();\n  }\n};","map":{"version":3,"names":["name","data","question","score","message","correctAnswer","loading","methods","fetchQuestion","fetch","then","res","json","error","catch","submitAnswer","answer","method","headers","body","JSON","stringify","question_id","id","correct","correct_answer","finally","skipQuestion","success","mounted"],"sources":["/Users/miosmaland/Skole/Dat310/san/cs-quiz-master/frontend/src/components/Play.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Navbar (gjenbruk gjerne en egen Navbar.vue, men her inline for enkelhet) -->\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <div class=\"container\">\n        <router-link class=\"navbar-brand\" to=\"/\">CS Quiz Master</router-link>\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul class=\"navbar-nav ms-auto\">\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/\">Home</router-link>\n            </li>\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/profile\">Profile</router-link>\n            </li>\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/leaderboard\">Leaderboard</router-link>\n            </li>\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/hangman\">Hangman</router-link>\n            </li>\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/logout\">Logout</router-link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n\n    <!-- Game content -->\n    <div class=\"container mt-5\">\n      <div class=\"d-flex justify-content-between align-items-center mb-3\">\n        <h1>üíª Computer Science Challenge</h1>\n        <div class=\"fs-4\">Score: {{ score }}</div>\n      </div>\n\n      <div class=\"mb-3\">\n        <p class=\"lead\">{{ question ? question.question : 'Loading question...' }}</p>\n      </div>\n\n      <div class=\"mb-3\">\n        <div class=\"list-group\">\n          <button\n            v-for=\"(option, key) in question?.options\"\n            :key=\"key\"\n            @click=\"submitAnswer(key)\"\n            class=\"list-group-item list-group-item-action\"\n            :disabled=\"loading\"\n          >\n            {{ key }}: {{ option }}\n          </button>\n        </div>\n      </div>\n\n      <div class=\"mb-3\">\n        <button class=\"btn btn-warning\" @click=\"skipQuestion\" :disabled=\"loading\">\n          ‚è© Skip Question (-5)\n        </button>\n      </div>\n\n      <p class=\"fs-5\" :class=\"{'text-success': correctAnswer, 'text-danger': correctAnswer === false}\">\n        {{ message }}\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"QuizPlay\",\n  data() {\n    return {\n      question: null,\n      score: 0,\n      message: '',\n      correctAnswer: null,\n      loading: false,\n    };\n  },\n  methods: {\n    fetchQuestion() {\n      this.loading = true;\n      fetch('/api/question')\n        .then((res) => res.json())\n        .then((data) => {\n          if (!data.error) {\n            this.question = data;\n            this.message = '';\n            this.correctAnswer = null;\n          } else {\n            this.message = data.error;\n          }\n          this.loading = false;\n        })\n        .catch(() => {\n          this.message = 'Failed to load question.';\n          this.loading = false;\n        });\n    },\n    submitAnswer(answer) {\n      if (this.loading) return;\n      this.loading = true;\n\n      fetch('/api/answer', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ question_id: this.question.id, answer }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          this.correctAnswer = data.correct;\n          if (data.correct) {\n            this.message = 'Correct!';\n            this.score += 1; // Just an example, adjust if needed\n          } else {\n            this.message = `Wrong! The correct answer was ${data.correct_answer}`;\n          }\n          this.fetchQuestion();\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    },\n    skipQuestion() {\n      if (this.loading) return;\n      this.loading = true;\n\n      fetch('/api/skip', { method: 'POST' })\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.success) {\n            this.score -= 5;\n            this.message = 'Question skipped.';\n            this.fetchQuestion();\n          } else {\n            this.message = data.error || 'Could not skip the question.';\n          }\n        })\n        .finally(() => {\n          this.loading = false;\n        });\n    },\n  },\n  mounted() {\n    this.fetchQuestion();\n  },\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}