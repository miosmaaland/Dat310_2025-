{"ast":null,"code":"export default {\n  name: \"UserLogin\",\n  data() {\n    return {\n      username: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    login() {\n      this.errorMessage = \"\";\n      const username = this.username.trim();\n      const password = this.password;\n      if (!username || !password) {\n        this.errorMessage = \"Please enter both username and password.\";\n        return;\n      }\n      if (username.length < 3 || username.length > 20) {\n        this.errorMessage = \"Username must be 3-20 characters.\";\n        return;\n      }\n      if (!/^[a-zA-Z0-9_]+$/.test(username)) {\n        this.errorMessage = \"Username can only contain letters, numbers, and underscores.\";\n        return;\n      }\n      fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        }),\n        credentials: 'include'\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          localStorage.setItem('user_id', data.user_id);\n          localStorage.setItem('username', data.username);\n          localStorage.setItem('is_admin', data.is_admin);\n          this.$router.push('/');\n        } else {\n          this.errorMessage = data.error || \"Login failed\";\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","username","password","errorMessage","methods","login","trim","length","test","fetch","method","headers","body","JSON","stringify","credentials","then","res","json","success","localStorage","setItem","user_id","is_admin","$router","push","error"],"sources":["/Users/miosmaland/Skole/Dat310/san/cs-quiz-master/frontend/src/components/Login.vue"],"sourcesContent":["<template>\n  <div>\n    \n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <div class=\"container\">\n        <router-link class=\"navbar-brand\" to=\"/\">CS Quiz Master</router-link>\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul class=\"navbar-nav ms-auto\">\n\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/\">Home</router-link>\n            </li>\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/login\">Login</router-link>\n            </li>\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/signup\">Sign Up</router-link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n\n    <div class=\"container mt-5\">\n      <h2 class=\"mb-4\">Login</h2>\n      <form @submit.prevent=\"login\">\n        <div class=\"mb-3\">\n          <label for=\"username\" class=\"form-label\">Username</label>\n          <input v-model=\"username\" type=\"text\" class=\"form-control\" id=\"username\" required />\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"password\" class=\"form-label\">Password</label>\n          <input v-model=\"password\" type=\"password\" class=\"form-control\" id=\"password\" required />\n        </div>\n        <button type=\"submit\">Login</button>\n        <p v-if=\"errorMessage\">{{ errorMessage }}</p>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"UserLogin\",\n  data() {\n    return {\n      username: '',\n      password: '',\n      errorMessage: '',\n    };\n  },\n  methods: {\n  login() {\n    this.errorMessage = \"\";\n    const username = this.username.trim();\n    const password = this.password;\n\n    \n    if (!username || !password) {\n      this.errorMessage = \"Please enter both username and password.\";\n      return;\n    }\n    if (username.length < 3 || username.length > 20) {\n      this.errorMessage = \"Username must be 3-20 characters.\";\n      return;\n    }\n    if (!/^[a-zA-Z0-9_]+$/.test(username)) {\n      this.errorMessage = \"Username can only contain letters, numbers, and underscores.\";\n      return;\n    }\n    \n    fetch('/api/login', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ username, password }),\n      credentials: 'include'\n    })\n      .then(res => res.json())\n      .then(data => {\n        if (data.success) {\n          localStorage.setItem('user_id', data.user_id);\n          localStorage.setItem('username', data.username);\n          localStorage.setItem('is_admin', data.is_admin);\n          this.$router.push('/');\n        } else {\n          this.errorMessage = data.error || \"Login failed\";\n        }\n      });\n  },\n},\n};\n</script>"],"mappings":"AAqDA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACTC,KAAKA,CAAA,EAAG;MACN,IAAI,CAACF,YAAW,GAAI,EAAE;MACtB,MAAMF,QAAO,GAAI,IAAI,CAACA,QAAQ,CAACK,IAAI,CAAC,CAAC;MACrC,MAAMJ,QAAO,GAAI,IAAI,CAACA,QAAQ;MAG9B,IAAI,CAACD,QAAO,IAAK,CAACC,QAAQ,EAAE;QAC1B,IAAI,CAACC,YAAW,GAAI,0CAA0C;QAC9D;MACF;MACA,IAAIF,QAAQ,CAACM,MAAK,GAAI,KAAKN,QAAQ,CAACM,MAAK,GAAI,EAAE,EAAE;QAC/C,IAAI,CAACJ,YAAW,GAAI,mCAAmC;QACvD;MACF;MACA,IAAI,CAAC,iBAAiB,CAACK,IAAI,CAACP,QAAQ,CAAC,EAAE;QACrC,IAAI,CAACE,YAAW,GAAI,8DAA8D;QAClF;MACF;MAEAM,KAAK,CAAC,YAAY,EAAE;QAClBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEb,QAAQ;UAAEC;QAAS,CAAC,CAAC;QAC5Ca,WAAW,EAAE;MACf,CAAC,EACEC,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,EACtBF,IAAI,CAAChB,IAAG,IAAK;QACZ,IAAIA,IAAI,CAACmB,OAAO,EAAE;UAChBC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAErB,IAAI,CAACsB,OAAO,CAAC;UAC7CF,YAAY,CAACC,OAAO,CAAC,UAAU,EAAErB,IAAI,CAACC,QAAQ,CAAC;UAC/CmB,YAAY,CAACC,OAAO,CAAC,UAAU,EAAErB,IAAI,CAACuB,QAAQ,CAAC;UAC/C,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;QACxB,OAAO;UACL,IAAI,CAACtB,YAAW,GAAIH,IAAI,CAAC0B,KAAI,IAAK,cAAc;QAClD;MACF,CAAC,CAAC;IACN;EACF;AACA,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}