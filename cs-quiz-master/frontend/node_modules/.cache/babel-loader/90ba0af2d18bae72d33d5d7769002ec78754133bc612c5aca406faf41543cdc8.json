{"ast":null,"code":"export default {\n  name: \"UserSignup\",\n  data() {\n    return {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successMessage: \"\",\n      errorMessage: \"\"\n    };\n  },\n  methods: {\n    async handleSignup() {\n      const errors = [];\n      const username = this.username.trim();\n      const email = this.email.trim();\n      const password = this.password;\n      if (username.length < 3 || username.length > 20) {\n        errors.push(\"Username must be 3-20 characters.\");\n      }\n      if (!/^[a-zA-Z0-9_]+$/.test(username)) {\n        errors.push(\"Username can only contain letters, numbers, and underscores.\");\n      }\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(email)) {\n        errors.push(\"Please enter a valid email address.\");\n      }\n      if (password.length < 8) {\n        errors.push(\"Password must be at least 8 characters.\");\n      }\n      if (!/\\d/.test(password)) {\n        errors.push(\"Password must contain at least one number.\");\n      }\n      if (!/[a-zA-Z]/.test(password)) {\n        errors.push(\"Password must contain at least one letter.\");\n      }\n      if (/\\s/.test(password)) {\n        errors.push(\"Password cannot contain spaces.\");\n      }\n      if (errors.length) {\n        this.errorMessage = errors.join(\" \");\n        return;\n      }\n      this.errorMessage = \"\";\n      try {\n        const response = await fetch(\"/api/signup\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: username,\n            email: email,\n            password: password\n          })\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          this.errorMessage = data.error || \"Signup failed\";\n          return;\n        }\n        const loginRes = await fetch(\"/api/login\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            username: username,\n            password: password\n          }),\n          credentials: \"include\"\n        });\n        const loginData = await loginRes.json();\n        if (loginData.success) {\n          localStorage.setItem('user_id', loginData.user_id);\n          localStorage.setItem('username', loginData.username);\n          this.$router.push(\"/\");\n        } else {\n          this.errorMessage = loginData.error || \"Login after signup failed\";\n        }\n      } catch (error) {\n        console.error(error);\n        this.errorMessage = \"Server error. Try again later.\";\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","username","email","password","successMessage","errorMessage","methods","handleSignup","errors","trim","length","push","test","emailRegex","join","response","fetch","method","headers","body","JSON","stringify","json","ok","error","loginRes","credentials","loginData","success","localStorage","setItem","user_id","$router","console"],"sources":["/Users/miosmaland/Skole/Dat310/san/cs-quiz-master/frontend/src/components/Signup.vue"],"sourcesContent":["<template>\n  <div>\n    \n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <div class=\"container\">\n        <router-link class=\"navbar-brand\" to=\"/\">CS Quiz Master</router-link>\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul class=\"navbar-nav ms-auto\">\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/\">Home</router-link>\n            </li>\n\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/login\">Login</router-link>\n            </li>\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/signup\">Sign Up</router-link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n\n    <div class=\"container mt-5\">\n      <h2 class=\"mb-4\">Sign Up</h2>\n      <form @submit.prevent=\"handleSignup\">\n        <div class=\"mb-3\">\n          <label for=\"username\" class=\"form-label\">Username</label>\n          <input v-model=\"username\" type=\"text\" class=\"form-control\" id=\"username\" required />\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"email\" class=\"form-label\">Email</label>\n          <input v-model=\"email\" type=\"email\" class=\"form-control\" id=\"email\" required />\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"password\" class=\"form-label\">Password</label>\n          <input v-model=\"password\" type=\"password\" class=\"form-control\" id=\"password\" required />\n        </div>\n        <button type=\"submit\" class=\"btn btn-success\">Sign Up</button>\n      </form>\n\n      <p class=\"mt-3 text-success\" v-if=\"successMessage\">{{ successMessage }}</p>\n      <p class=\"mt-3 text-danger\" v-if=\"errorMessage\">{{ errorMessage }}</p>\n\n      <p class=\"mt-3\">\n        Already have an account?\n        <router-link to=\"/login\">Login here</router-link>\n      </p>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"UserSignup\",\n  data() {\n    return {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successMessage: \"\",\n      errorMessage: \"\"\n    };\n  },\n  methods: {\n    async handleSignup() {\n      const errors = [];\n      const username = this.username.trim();\n      const email = this.email.trim();\n      const password = this.password;\n\n      if (username.length < 3 || username.length > 20) {\n        errors.push(\"Username must be 3-20 characters.\");\n      }\n      if (!/^[a-zA-Z0-9_]+$/.test(username)) {\n        errors.push(\"Username can only contain letters, numbers, and underscores.\");\n      }\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(email)) {\n        errors.push(\"Please enter a valid email address.\");\n      }\n      if (password.length < 8) {\n        errors.push(\"Password must be at least 8 characters.\");\n      }\n      if (!/\\d/.test(password)) {\n        errors.push(\"Password must contain at least one number.\");\n      }\n      if (!/[a-zA-Z]/.test(password)) {\n        errors.push(\"Password must contain at least one letter.\");\n      }\n      if (/\\s/.test(password)) {\n        errors.push(\"Password cannot contain spaces.\");\n      }\n      if (errors.length) {\n        this.errorMessage = errors.join(\" \");\n        return;\n      }\n      this.errorMessage = \"\";\n\n      try {\n        const response = await fetch(\"/api/signup\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            username: username,\n            email: email,\n            password: password,\n          }),\n        });\n        const data = await response.json();\n        if (!response.ok) {\n          this.errorMessage = data.error || \"Signup failed\";\n          return;\n        }\n        \n        const loginRes = await fetch(\"/api/login\", {\n          method: \"POST\",\n          headers: { \"Content-Type\": \"application/json\" },\n          body: JSON.stringify({\n            username: username,\n            password: password,\n          }),\n          credentials: \"include\",\n        });\n        \n        const loginData = await loginRes.json();\n        if (loginData.success) {\n          localStorage.setItem('user_id', loginData.user_id);\n          localStorage.setItem('username', loginData.username);\n          this.$router.push(\"/\");\n        } else {\n          this.errorMessage = loginData.error || \"Login after signup failed\";\n        }\n      } catch (error) {\n        console.error(error);\n        this.errorMessage = \"Server error. Try again later.\";\n      }\n    },\n  },\n};\n</script>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}