{"ast":null,"code":"export default {\n  name: \"UserLogin\",\n  data() {\n    return {\n      username: '',\n      password: '',\n      errorMessage: ''\n    };\n  },\n  methods: {\n    login() {\n      fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: this.username,\n          password: this.password\n        }),\n        credentials: 'include'\n      }).then(res => res.json()).then(data => {\n        if (data.success) {\n          localStorage.setItem('user_id', data.user_id);\n          localStorage.setItem('username', data.username);\n          // Fetch is_admin from backend\n          fetch(`/api/user/${data.user_id}`, {\n            credentials: 'include'\n          }).then(res => res.json()).then(userData => {\n            localStorage.setItem('is_admin', userData.is_admin);\n            this.$router.push('/');\n          });\n        } else {\n          this.errorMessage = data.error || \"Login failed\";\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["name","data","username","password","errorMessage","methods","login","fetch","method","headers","body","JSON","stringify","credentials","then","res","json","success","localStorage","setItem","user_id","userData","is_admin","$router","push","error"],"sources":["/Users/miosmaland/Skole/Dat310/san/cs-quiz-master/frontend/src/components/Login.vue"],"sourcesContent":["<template>\n  <div>\n    <!-- Navbar -->\n    <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <div class=\"container\">\n        <router-link class=\"navbar-brand\" to=\"/\">CS Quiz Master</router-link>\n        <button\n          class=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#navbarNav\"\n          aria-controls=\"navbarNav\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span class=\"navbar-toggler-icon\"></span>\n        </button>\n        <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n          <ul class=\"navbar-nav ms-auto\">\n\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/\">Home</router-link>\n            </li>\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/login\">Login</router-link>\n            </li>\n            <li class=\"nav-item\">\n              <router-link class=\"nav-link\" to=\"/signup\">Sign Up</router-link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n\n    <div class=\"container mt-5\">\n      <h2 class=\"mb-4\">Login</h2>\n      <form @submit.prevent=\"login\">\n        <div class=\"mb-3\">\n          <label for=\"username\" class=\"form-label\">Username</label>\n          <input v-model=\"username\" type=\"text\" class=\"form-control\" id=\"username\" required />\n        </div>\n        <div class=\"mb-3\">\n          <label for=\"password\" class=\"form-label\">Password</label>\n          <input v-model=\"password\" type=\"password\" class=\"form-control\" id=\"password\" required />\n        </div>\n        <button type=\"submit\">Login</button>\n        <p v-if=\"errorMessage\">{{ errorMessage }}</p>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"UserLogin\",\n  data() {\n    return {\n      username: '',\n      password: '',\n      errorMessage: '',\n    };\n  },\n  methods: {\n    login() {\n      fetch('/api/login', {\n  method: 'POST',\n  headers: { 'Content-Type': 'application/json' },\n  body: JSON.stringify({ username: this.username, password: this.password }),\n  credentials: 'include'\n})\n  .then(res => res.json())\n  .then(data => {\n    if (data.success) {\n      localStorage.setItem('user_id', data.user_id);\n      localStorage.setItem('username', data.username);\n      // Fetch is_admin from backend\n      fetch(`/api/user/${data.user_id}`, { credentials: 'include' })\n        .then(res => res.json())\n        .then(userData => {\n          localStorage.setItem('is_admin', userData.is_admin);\n          this.$router.push('/');\n        });\n    } else {\n      this.errorMessage = data.error || \"Login failed\";\n    }\n  });\n    },\n  },\n};\n</script>"],"mappings":"AAqDA,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,KAAKA,CAAA,EAAG;MACNC,KAAK,CAAC,YAAY,EAAE;QACxBC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEV,QAAQ,EAAE,IAAI,CAACA,QAAQ;UAAEC,QAAQ,EAAE,IAAI,CAACA;QAAS,CAAC,CAAC;QAC1EU,WAAW,EAAE;MACf,CAAC,EACEC,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,EACtBF,IAAI,CAACb,IAAG,IAAK;QACZ,IAAIA,IAAI,CAACgB,OAAO,EAAE;UAChBC,YAAY,CAACC,OAAO,CAAC,SAAS,EAAElB,IAAI,CAACmB,OAAO,CAAC;UAC7CF,YAAY,CAACC,OAAO,CAAC,UAAU,EAAElB,IAAI,CAACC,QAAQ,CAAC;UAC/C;UACAK,KAAK,CAAC,aAAaN,IAAI,CAACmB,OAAO,EAAE,EAAE;YAAEP,WAAW,EAAE;UAAU,CAAC,EAC1DC,IAAI,CAACC,GAAE,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,EACtBF,IAAI,CAACO,QAAO,IAAK;YAChBH,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEE,QAAQ,CAACC,QAAQ,CAAC;YACnD,IAAI,CAACC,OAAO,CAACC,IAAI,CAAC,GAAG,CAAC;UACxB,CAAC,CAAC;QACN,OAAO;UACL,IAAI,CAACpB,YAAW,GAAIH,IAAI,CAACwB,KAAI,IAAK,cAAc;QAClD;MACF,CAAC,CAAC;IACA;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}