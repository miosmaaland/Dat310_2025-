{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container mt-5\"\n};\nconst _hoisted_2 = {\n  class: \"mb-3\"\n};\nconst _hoisted_3 = {\n  class: \"mt-3\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[3] || (_cache[3] = _createElementVNode(\"h2\", {\n    class: \"mb-4\"\n  }, \"Hangman Game\", -1)), _createElementVNode(\"p\", null, \"Word: \" + _toDisplayString($options.displayWord), 1), _createElementVNode(\"p\", null, \"Guesses Left: \" + _toDisplayString($data.guessesLeft), 1), _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.guess = $event),\n    onKeyup: _cache[1] || (_cache[1] = _withKeys((...args) => $options.makeGuess && $options.makeGuess(...args), [\"enter\"])),\n    class: \"form-control\",\n    placeholder: \"Enter a letter\"\n  }, null, 544), [[_vModelText, $data.guess]])]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.makeGuess && $options.makeGuess(...args)),\n    class: \"btn btn-primary\"\n  }, \"Guess\"), _createElementVNode(\"p\", _hoisted_3, _toDisplayString($data.message), 1)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_toDisplayString","$options","displayWord","$data","guessesLeft","_hoisted_2","guess","$event","onKeyup","_cache","_withKeys","args","makeGuess","placeholder","onClick","_hoisted_3","message"],"sources":["/Users/miosmaland/Skole/Dat310/san/cs-quiz-master/frontend/src/components/Hangman.vue"],"sourcesContent":["<template>\n  <div class=\"container mt-5\">\n    <h2 class=\"mb-4\">Hangman Game</h2>\n    <p>Word: {{ displayWord }}</p>\n    <p>Guesses Left: {{ guessesLeft }}</p>\n    <div class=\"mb-3\">\n      <input v-model=\"guess\" @keyup.enter=\"makeGuess\" class=\"form-control\" placeholder=\"Enter a letter\" />\n    </div>\n    <button @click=\"makeGuess\" class=\"btn btn-primary\">Guess</button>\n    <p class=\"mt-3\">{{ message }}</p>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"HangmanGame\",\n  data() {\n    return {\n      word: \"vuejs\",\n      guessedLetters: [],\n      guess: \"\",\n      guessesLeft: 6,\n      message: \"\",\n    };\n  },\n  computed: {\n    displayWord() {\n      return this.word\n        .split(\"\")\n        .map((letter) => (this.guessedLetters.includes(letter) ? letter : \"_\"))\n        .join(\" \");\n    },\n  },\n  methods: {\n    makeGuess() {\n      if (this.guess.length === 1 && !this.guessedLetters.includes(this.guess)) {\n        this.guessedLetters.push(this.guess);\n        if (!this.word.includes(this.guess)) {\n          this.guessesLeft--;\n        }\n        this.checkGameStatus();\n      }\n      this.guess = \"\";\n    },\n    checkGameStatus() {\n      if (this.displayWord.replace(/ /g, \"\") === this.word) {\n        this.message = \"Congratulations! You've won!\";\n      } else if (this.guessesLeft <= 0) {\n        this.message = `Game Over! The word was \"${this.word}\".`;\n      }\n    },\n  },\n};\n</script>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAgB;;EAIpBA,KAAK,EAAC;AAAM;;EAIdA,KAAK,EAAC;AAAM;;uBARjBC,mBAAA,CASM,OATNC,UASM,G,0BARJC,mBAAA,CAAkC;IAA9BH,KAAK,EAAC;EAAM,GAAC,cAAY,QAC7BG,mBAAA,CAA8B,WAA3B,QAAM,GAAAC,gBAAA,CAAGC,QAAA,CAAAC,WAAW,OACvBH,mBAAA,CAAsC,WAAnC,gBAAc,GAAAC,gBAAA,CAAGG,KAAA,CAAAC,WAAW,OAC/BL,mBAAA,CAEM,OAFNM,UAEM,G,gBADJN,mBAAA,CAAoG;+DAApFI,KAAA,CAAAG,KAAK,GAAAC,MAAA;IAAGC,OAAK,EAAAC,MAAA,QAAAA,MAAA,MAAAC,SAAA,KAAAC,IAAA,KAAQV,QAAA,CAAAW,SAAA,IAAAX,QAAA,CAAAW,SAAA,IAAAD,IAAA,CAAS;IAAEf,KAAK,EAAC,cAAc;IAACiB,WAAW,EAAC;gCAAjEV,KAAA,CAAAG,KAAK,E,KAEvBP,mBAAA,CAAiE;IAAxDe,OAAK,EAAAL,MAAA,QAAAA,MAAA,UAAAE,IAAA,KAAEV,QAAA,CAAAW,SAAA,IAAAX,QAAA,CAAAW,SAAA,IAAAD,IAAA,CAAS;IAAEf,KAAK,EAAC;KAAkB,OAAK,GACxDG,mBAAA,CAAiC,KAAjCgB,UAAiC,EAAAf,gBAAA,CAAdG,KAAA,CAAAa,OAAO,M","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}